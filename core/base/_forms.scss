/* ============================================================================
   @CORE -> BASE -> FORMS
   ========================================================================= */


/**
 * @demo
 * http://codepen.io/team/westfieldlabs/full/zIgBs/#forms
 */


/**
 * Settings.
 */

// Disabled state
$disabled-state:                              true !default;

$disabled-state-opacity-strength:             0.6 !default;

// Remove the top inner shadow from iOS inputs
$remove-top-inner-shadow-from-ios-inputs:     false !default;

// Hide the close button generated by IE 10+ for `input[type="search"]`
$hide-close-button-for-ie10plus-inputs:       false !default;

/**
 * Text inputs and `select`s.
 */

// Turn styling on
$text-input-and-select-styles:                true !default;

// Apply rounded corners
$text-input-and-select-rounded-corners:       false !default;

$text-input-and-select-rounded-corners-size:  $border-radius !default;

// Padding
$text-input-and-select-padding:               $spacing-quarter !default;

// Border
$text-input-and-select-border:                true !default;

$text-input-and-select-border-thickness:      1 !default;

$text-input-and-select-border-style:          solid !default;

$text-input-and-select-border-colour:         lighten($colour-black, 30%)
!default;

// Text colour
$text-input-and-select-text-color:            $colour-text-base !default;

// Background
$text-input-and-select-background-color:      $colour-white !default;


/**
 * Indicate that `label` will shift focus to the associated `input` element.
 */

label,
.faux-label {cursor: pointer;}


/**
 * Disable `textarea`s from being resized horizontally.
 */

textarea {resize: vertical;}


/**
 * Override `content-box` from normalize.css for search inputs.
 */

@if $friendly-box-model {

  input[type="search"] {box-sizing: border-box;}

}


/**
 * Remove rounded corners from iOS search inputs by overriding
 * `appearance: textfield` from normalize.css.
 * See: https://github.com/necolas/normalize.css/issues/360.
 */

input[type="search"] {appearance: none;}


/**
 * Remove rounded corners that iOS applies to all `input` buttons.
 * See: https://github.com/necolas/normalize.css/issues/178
 */

input[type="submit"],
input[type="button"],
input[type="image"],
input[type="reset"],
select {border-radius: 0;}


/**
 * Fix for IE and old versions of some other browsers not wrapping text within
 * a `legend`.
 *
 * 1. Enable line-wrapping in IE8+.
 * 2. Enable line-wrapping in old versions of some other browsers.
 *
 * @credit
 * http://www.456bereastreet.com/archive/201210/
 * how_to_line_wrap_text_in_legend_elements_even_in_ie/
 */

legend {
  display: table; // [1]
  white-space: normal; // [2]
}


/**
 * Set whitespace for `legend`s via a class, we use `padding` over `margin` as
 * `padding` is the most cross-browser compatible for `legend`s.
 */

.form-heading {@include to-rem(padding-bottom, $spacing-base);}


/**
 * Disabled state.
 *
 * N.B. it is okay to use `!important` here as we're doing it preemptively
 * i.e. you know you will always want the rule it's applied too to take
 * precedence.
 */

@if $disabled-state {

  button[disabled],
  input[disabled],
  select[disabled],
  textarea[disabled],
  .is-disabled {
    cursor: not-allowed !important;
    text-shadow: none !important;
    box-shadow: none !important;
    opacity: $disabled-state-opacity-strength !important;
  }

  // Modifier: no hover; prevent common hover/focus states being applied
  .is-disabled--no-hover {
    cursor: inherit !important;
    color: inherit !important;
    background: inherit !important;
    text-decoration: none !important;
  }

}


/**
 * Required field indicator (asterisk).
 */

.required-field {
  color: $colour-state-error;
  cursor: help;
}


/**
 * Text inputs via the `.text-input` class, `textarea`s, and `select` lists.
 */

@if $text-input-and-select-styles {

  %text-input-select-styles,
  .text-input,
  textarea,
  select {
    @include to-rem(padding, $text-input-and-select-padding);
    color: $text-input-and-select-text-color;
    background: $text-input-and-select-background-color;

    // Apply a border but make it optional
    @if $text-input-and-select-border {

      @include to-rem(border, $text-input-and-select-border-thickness
                              $text-input-and-select-border-style
                              $text-input-and-select-border-colour
                      );

    }

    @else {

      border: 0;

    }

    // Apply rounded corners but make it optional
    @if $text-input-and-select-rounded-corners {

      @include to-rem(border-radius,
        $text-input-and-select-rounded-corners-size);

    }
  }

}// endif


/**
 * Remove the top inner shadow from iOS inputs.
 *
 * N.B. this needs to be isolated to iOS devices so user-agent sniffing needs
 * to happen and the most robust implementation of this is to apply the hook
 * to the `html` element e.g. `.ios`.
 */

@if $remove-top-inner-shadow-from-ios-inputs {

  .ios {
    .remove-top-inner-shadow-from-ios-inputs,
    .text-input,
    textarea {-webkit-appearance: caret;}
  }

}// endif


/**
 * Hide the close button generated by IE 10+ for inputs.
 */

@if $hide-close-button-for-ie10plus-inputs {

  .hide-close-button-for-ie-inputs::-ms-clear,
  .text-input::-ms-clear {display: none;}

}// endif